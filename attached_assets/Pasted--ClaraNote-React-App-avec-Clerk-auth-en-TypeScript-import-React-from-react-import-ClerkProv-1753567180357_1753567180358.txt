// ClaraNote React App avec Clerk (auth) en TypeScript
import React from "react";
import { ClerkProvider, SignedIn, SignedOut, SignIn, SignUp, RedirectToSignIn, UserButton, useUser } from "@clerk/clerk-react";
import { BrowserRouter as Router, Routes, Route, Link } from "react-router-dom";

const clerkPubKey = "TON_CLERK_PUBLISHABLE_KEY"; // üîÅ Remplace par ta vraie cl√© Clerk

function Home() {
  return (
    <div className="p-8 text-center">
      <h2 className="text-3xl font-bold mb-4">Bienvenue sur ClaraNote</h2>
      <p className="text-lg mb-6">Votre assistant IA pour g√©n√©rer vos comptes-rendus de r√©unions.</p>
      <Link to="/dashboard" className="bg-blue-600 text-white px-4 py-2 rounded">Acc√©der √† mon espace</Link>
    </div>
  );
}

function Dashboard() {
  const { user } = useUser();
  return (
    <div className="p-6">
      <h2 className="text-2xl font-semibold mb-2">Bonjour {user?.firstName || user?.username} üëã</h2>
      <p>Bienvenue dans votre espace ClaraNote. Vos r√©unions appara√Ætront ici bient√¥t.</p>
    </div>
  );
}

function Navbar() {
  const { user } = useUser();
  return (
    <nav className="flex justify-between items-center p-4 bg-white shadow">
      <Link to="/" className="font-bold text-xl">ClaraNote</Link>
      <div>
        {user ? <UserButton afterSignOutUrl="/" /> : <Link to="/sign-in" className="text-blue-600">Se connecter</Link>}
      </div>
    </nav>
  );
}

export default function App() {
  return (
    <ClerkProvider publishableKey={clerkPubKey}>
      <Router>
        <Navbar />
        <Routes>
          <Route path="/" element={<Home />} />
          <Route path="/sign-in" element={<SignIn routing="path" path="/sign-in" />} />
          <Route path="/sign-up" element={<SignUp routing="path" path="/sign-up" />} />
          <Route
            path="/dashboard"
            element={
              <SignedIn>
                <Dashboard />
              </SignedIn>
            }
          />
          <Route
            path="/dashboard"
            element={
              <SignedOut>
                <RedirectToSignIn />
              </SignedOut>
            }
          />
        </Routes>
      </Router>
    </ClerkProvider>
  );
}